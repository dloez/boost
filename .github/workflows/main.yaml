name: Main CI pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
    outputs:
      venv:
        description: "Python virtual environment"
        value: ${{ jobs.setup.outputs.venv }}
jobs:
  setup:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    outputs:
      venv: ${{ steps.generate-outputs.outputs.venv }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Setup project, python and poetry
        uses: ./setup-action
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate outputs
        id: generate-outputs
        run: echo "venv=$VENV" >> $GITHUB_OUTPUT
  linting:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    needs: setup
    runs-on: ${{ matrix.os }}
    steps:
      - name: Run Black
        run: |
          source ${{ needs.setup.outputs.venv }}
          black --check boostbuild
      - name: Run Pylint
        run: |
          source ${{ needs.setup.outputs.venv }}
          pylint --rcfile pyproject.toml boostbuild
  